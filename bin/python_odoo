#!/usr/bin/env bash
# Start an interactive Odoo session or run a Python script inside Odoo.

basedir="$(dirname "$(dirname "${BASH_SOURCE[0]}")")"

if [ $# = 0 ]; then
    exec "$basedir"/bin/odoo shell
fi

case $1 in
    -c)
        shift
        code='code = sys.argv[0]'
        ;;
    -*)
        cat <<EOF
Usage: $0 [filename | -c command] [args...]

Start an interactive Odoo session or run a Python script inside Odoo.

This is a wrapper for 'odoo shell' that emulates buildout's 'python_odoo'
command.
EOF
        exit 1
        ;;
    *)
        code='with open(sys.argv[0]) as f: code = f.read()'
        ;;
esac

# Forward sys.argv and fake some of python_odoo's API
# This is specifically enough to keep testherp.py working, other scripts
# may require more work
export ODOO_CONFIG_FILE="$basedir"/etc/odoo.cfg
exec "$basedir"/bin/odoo shell <<EOF
import unittest.mock, os, sys
session = unittest.mock.Mock()
session.env = env
session.cr = env.cr
session.uid = env.uid
session.context = env.context
session.registry = env.registry
session.openerp_config_file = os.environ['ODOO_CONFIG_FILE']
sys.argv = $("$basedir"/env/bin/python -c "import sys; print(sys.argv[1:])" "$@")
$code
exec(code, locals())
EOF
